name: Publish Docker Image

on:
  push:
    branches:
      - "master"

env:
  REGISTRY_IMAGE: ghcr.io/seoulsky/sorusora

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v7
          - linux/arm64/v8
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform }}
          tags: ${{ env.REGISTRY_IMAGE }}:${{ github.sha }}

      - name: Export digest
        run: echo "${{ steps.build.outputs.digest }}" > digest.txt

      - name: Upload digest
        uses: actions/upload-artifact@v2
        with:
          name: digests
          path: digest.txt

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v2
        with:
          name: digests
          path: /tmp/digests

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        run: |
          image_name="${{ env.REGISTRY_IMAGE }}:${{ github.sha }}"
          docker manifest create "$image_name" $(cat /tmp/digests/digest.txt)
          docker manifest annotate "$image_name" ${{ env.REGISTRY_IMAGE }}:${{ github.sha }} --arch amd64
          docker manifest push --purge "$image_name"

      - name: Inspect image
        run: docker manifest inspect "${{ env.REGISTRY_IMAGE }}:${{ github.sha }}"
